{"version":3,"sources":["idGenerator.js","components/recipe.js","containers/recipes.js","databasehandler.js","components/ingridientComponent.js","components/Ingridients.js","containers/StartingPage.js","components/cocktailPage.js","containers/SideBar.js","App.js","serviceWorker.js","index.js","asset/Background.jpg"],"names":["idGenerator","pre","Math","random","Recipe","props","useState","state","setState","className","recipe","name","List","content","ingredients","forEach","ingredient","push","ListItem","key","TableContainer","component","Paper","Table","aria-label","TableBody","keys","stepsOfPreparation","step","TableRow","TableCell","align","Checkbox","checked","onChange","value","inputProps","length","onClick","backButton","Recipes","allRecipes","Object","values","data","showOneRecipe","allReceipts","selected","this","bind","renderItems","React","Component","Database_url","getAllRecipes","response","$","ajax","url","dataType","type","async","success","serverResponse","error","console","log","Error","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","IngridientComponent","classes","selectebalItems","allIngredients","map","element","MenuItem","item","FormControl","InputLabel","id","Select","labelId","e","index","indexOf","setSelected","handleChange","target","IconButton","filter","createContent","Button","variant","style","AntSwitch","withStyles","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","Switch","Ingridient","shopping","getAllIngridients","selectedItems","test","Typography","Grid","container","alignItems","event","to","pathname","StartingPage","alt","src","Background","CocktailPage","location","matchRating","selectedIngredients","matchedIngredients","recipes","Array","from","matchingRate","sort","a","b","reciep","ListItemText","round","createView","Sidebar","isOpen","href","App","allItems","path","render","exact","Ingridients","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b900eb43.chunk.js","sourcesContent":["export function idGenerator(pre){\r\n    return pre+Math.random();\r\n}","import React, { useState } from 'react';\r\nimport List from \"@material-ui/core/List\";\r\nimport { ListItem } from '@material-ui/core';\r\nimport \"./recipe.css\"\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { idGenerator } from \"../idGenerator\"\r\n\r\nexport default function Recipe(props) {\r\n    const [state, setState] = useState({});\r\n\r\n    const ingredients = () => {\r\n        let content = []\r\n        props.recipe.ingredients.forEach(ingredient => {\r\n            content.push(\r\n                <ListItem\r\n                    key={idGenerator(ingredient)\r\n                    }>\r\n                    {ingredient}\r\n                </ListItem>\r\n            )\r\n        });\r\n        return (content);\r\n    }\r\n\r\n    const stepsOfPreparation = () => {\r\n        let content = []\r\n        let keys = {}\r\n        props.recipe.stepsOfPreparation.forEach(step => {\r\n            if (!keys[step]) {\r\n                keys[step] = false\r\n            }\r\n            content.push(\r\n                <TableRow key={idGenerator(\"TableRow\")}>\r\n                    <TableCell\r\n                        key={idGenerator(step)}\r\n                        align=\"right\">\r\n                        {step}\r\n                    </TableCell>\r\n                    <TableCell\r\n                        key={idGenerator(\"right cell\")}\r\n                        align=\"right\"\r\n                    >{\r\n                            <Checkbox\r\n                                checked={state[step]}\r\n                                onChange={() => {\r\n                                    if (state[step]) {\r\n                                        state[step] = true\r\n                                    } else {\r\n                                        state[step] = true\r\n                                    }\r\n                                }}\r\n                                value=\"primary\"\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                            />\r\n                        }</TableCell>\r\n                </TableRow>\r\n            )\r\n        });\r\n        if (state.length !== keys.length) {\r\n            setState(keys)\r\n        }\r\n        return (content);\r\n    }\r\n\r\n    return (\r\n        <div className=\"recipe\">\r\n            <h1>{props.recipe.name}</h1>\r\n            <h3>Zutaten</h3>\r\n            <List>\r\n                {ingredients()}\r\n            </List>\r\n            <h3>Zubereitung</h3>\r\n            <TableContainer component={Paper}>\r\n                <Table className={\"stepTable\"} aria-label=\"simple table\">\r\n                    <TableBody>\r\n                        {stepsOfPreparation()}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <button onClick={props.backButton}>back</button>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"./recipes.css\";\r\nimport List from \"@material-ui/core/List\"\r\nimport { ListItem } from '@material-ui/core';\r\nimport Recipe from \"../components/recipe\"\r\nimport { idGenerator } from \"../idGenerator\"\r\n\r\nclass Recipes extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { allRecipes: Object.values(this.props.data), showOneRecipe: false }\r\n    }\r\n\r\n    renderItems(allReceipts) {\r\n        let content = []\r\n        allReceipts.forEach(recipe => {\r\n            content.push(\r\n                <ListItem\r\n                    key={idGenerator(recipe.name)}\r\n                    onClick={() => {\r\n                        this.setState({ selected: recipe, showOneRecipe: true })\r\n                    }}>\r\n                    {recipe.name}\r\n                </ListItem>\r\n            )\r\n        })\r\n        return content\r\n    }\r\n\r\n    backButton() {\r\n        this.setState({ showOneRecipe: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"recipes\">\r\n                {\r\n                    this.state.showOneRecipe ?\r\n                        <Recipe\r\n                            recipe={this.state.selected}\r\n                            backButton={this.backButton.bind(this)}\r\n                        />\r\n                        :\r\n                        <>\r\n                            <h1>Alle Cocktailrezepte</h1>\r\n                            <List\r\n                                key={idGenerator(\"Alle\")}\r\n                            >\r\n                                {this.renderItems(this.state.allRecipes)}\r\n                            </List>\r\n                        </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Recipes;","import $ from 'jquery';\r\nconst Database_url = \"https://cocktailapp-d9581.firebaseio.com/\"\r\n\r\n// I need those function to the database;\r\n// getAllRecipes\r\n// getAllIngredients\r\n\r\nexport function getAllRecipes() {\r\n    let response\r\n    $.ajax({\r\n        url: Database_url + 'receipts.json',\r\n        dataType: \"json\",\r\n        type: 'GET',\r\n        async: false,\r\n        success: function (serverResponse) {\r\n            response = serverResponse;\r\n        },\r\n        error: function (serverResponse) {\r\n            console.log(\"Response: \", serverResponse);\r\n            response = serverResponse;\r\n            debugger;\r\n            throw new Error(\"Error during loading of all recipes\");\r\n        }\r\n    });\r\n    return response;\r\n}\r\n\r\nexport function getAllIngridients() {\r\n    let response\r\n    $.ajax({\r\n        url: Database_url + 'ingredients.json',\r\n        dataType: \"json\",\r\n        type: 'GET',\r\n        async: false,\r\n        success: function (serverResponse) {\r\n            response = serverResponse;\r\n        },\r\n        error: function (serverResponse) {\r\n            console.log(\"Response: \", serverResponse);\r\n            response = serverResponse;\r\n            debugger;\r\n            throw new Error(\"Error during loading of all ingredients\");\r\n        }\r\n    });\r\n    return response;\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport { idGenerator } from \"../idGenerator\"\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nfunction IngridientComponent(props) {\r\n    const [state, setState] = useState({ selected: [\"Bitte Auswählen\"] });\r\n    const classes = useStyles();\r\n\r\n    let handleChange = (item, e) => {\r\n        let index = state.selected.indexOf(item)\r\n        state.selected[index] = e\r\n        setState({ selected: state.selected })\r\n        props.setSelected(state.selected)\r\n    }\r\n\r\n    let createContent = () => {\r\n        let content = []\r\n        let selectebalItems = []\r\n        props.allIngredients.map(element => {\r\n            selectebalItems.push(<MenuItem key={idGenerator(\"MenuItem\")} value={element}>{element}</MenuItem>)\r\n            return null\r\n        }\r\n        )\r\n        state.selected.forEach(item => {\r\n            content.push(\r\n                <tr key={item}>\r\n                    <td>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={item}\r\n                                onChange={(e) => {\r\n                                    handleChange(item, e.target.value)\r\n                                    item = e.target.value\r\n                                }\r\n                                }>\r\n                                <MenuItem\r\n                                    value=\"Bitte Auswählen\">\r\n                                    Bitte Auswählen\r\n                                    </MenuItem>\r\n                                {\r\n                                    selectebalItems\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </td>\r\n                    <td>\r\n                        <IconButton\r\n                            aria-label=\"delete\"\r\n                            onClick={() => {\r\n                                state.selected = state.selected.filter(element => element !== item)\r\n                                setState({ selected: state.selected });\r\n                            }\r\n                            }>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </td>\r\n                </tr >\r\n            )\r\n        });\r\n        return content\r\n    }\r\n\r\n    let addIngridient = () => {\r\n        state.selected.push(\"Bitte Auswählen\");\r\n        setState({ selected: state.selected });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {createContent()}\r\n            <tr key={idGenerator(\"Zutate hinzufügen\")}>\r\n                <td>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"startButton\"\r\n                        style={{ \"marginLeft\": \"30%\", \"width\": \"100%\" }}\r\n                        onClick={addIngridient}\r\n                    >\r\n                        Zutat hinzufügen\r\n                </Button>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IngridientComponent;\r\n","import React from \"react\"\r\nimport IngridientComponent from \"./ingridientComponent\"\r\nimport { getAllIngridients } from \"../databasehandler\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./Ingredients.css\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { idGenerator } from \"../idGenerator\"\r\n\r\nconst AntSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 28,\r\n        height: 16,\r\n        padding: 0,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 2,\r\n        color: theme.palette.grey[500],\r\n        '&$checked': {\r\n            transform: 'translateX(12px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.primary.main,\r\n                borderColor: theme.palette.primary.main,\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 12,\r\n        height: 12,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        border: `1px solid ${theme.palette.grey[500]}`,\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\n\r\nfunction Ingridient() {\r\n    const [state, setState] = React.useState({\r\n        shopping: false,\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n    let allIngredients = getAllIngridients()\r\n\r\n    let setSelected = (selectedItems) => {\r\n        setState({ test: selectedItems })\r\n    }\r\n    return (\r\n        <div className=\"ingredients\">\r\n            <table>\r\n                <tbody>\r\n                    <IngridientComponent\r\n                        allIngredients={allIngredients}\r\n                        setSelected={setSelected}\r\n                    />\r\n                    <tr key={idGenerator(\"Einkaufen?\")}>\r\n                        <td>\r\n                            Wollen Sie einkaufen gehen?\r\n                    </td>\r\n                        <td>\r\n                            <Typography component=\"div\">\r\n                                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                                    <Grid item>Nein</Grid>\r\n                                    <Grid item>\r\n                                        <AntSwitch\r\n                                            checked={state.shopping}\r\n                                            onChange={handleChange('shopping')}\r\n                                            value=\"checkedC\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>Ja!</Grid>\r\n                                </Grid>\r\n                            </Typography>\r\n                        </td>\r\n                    </tr>\r\n                    <tr key={idGenerator(\"Weiter\")}>\r\n                        <td>\r\n                            <Link\r\n                                to={{ pathname: \"/cocktail\", selected: state.test, shopping: state.shopping }} >\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    className=\"startButton\"\r\n                                    style={{ \"marginLeft\": \"30%\", \"width\": \"100%\" }}>\r\n                                    Weiter zu den Cocktails\r\n                                    </Button>\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ingridient;\r\n","import React from \"react\";\r\nimport \"./StartingPage.css\"\r\nimport Background from '../asset/Background.jpg';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass StartingPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Startcontent\">\r\n                <p className=\"welcome\">Welcome to your Cocktailapp!</p>\r\n                <img\r\n                    alt=\"Backgroundimage\"\r\n                    className=\"background\"\r\n                    src={Background}\r\n                />\r\n                <Link\r\n                    to={\"/ingredients\"}\r\n                >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"startButton\"\r\n                        style={{\r\n                            \"marginLeft\": \"30%\"\r\n                        }}>\r\n                        Start\r\n                        </Button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default StartingPage","import React from 'react';\r\nimport { getAllRecipes } from '../databasehandler';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\nimport \"./recipe.css\"\r\nimport Recipe from \"../components/recipe\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport \"./cocktailPage.css\"\r\nimport { idGenerator } from \"../idGenerator\"\r\n\r\n\r\nclass CocktailPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showOneRecipe: false }\r\n  }\r\n\r\n  allRecipes = []\r\n  allRecipes = Object.values(getAllRecipes())\r\n  props = { location: { selected: [\"Rum\", \"Wodka\"], shopping: true } }\r\n\r\n  matchRating = (selectedIngredients) => {\r\n    this.allRecipes.forEach(recipe => {\r\n      let matchedIngredients = []\r\n      recipe.ingredients.forEach(ingredient => {\r\n        if (selectedIngredients.indexOf(ingredient) >= 0) {\r\n          matchedIngredients.push(ingredient)\r\n        }\r\n      })\r\n      recipe[\"matchingRate\"] = matchedIngredients.length / recipe.ingredients.length\r\n    })\r\n  }\r\n\r\n  backButton() {\r\n    this.setState({ showOneRecipe: false })\r\n  }\r\n\r\n  createContent = (recipes, shopping) => {\r\n    let content = []\r\n    if (shopping) {\r\n      recipes = Array.from(recipes)\r\n      recipes = recipes.filter(recipe => recipe.matchingRate !== 1)\r\n      recipes.sort(function (a, b) {\r\n        if (a.matchingRate > b.matchingRate) {\r\n          return -1;\r\n        }\r\n        else if (a.matchingRate < b.matchingRate) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n    } else {\r\n      recipes = recipes.filter(reciep => reciep.matchingRate === 1)\r\n    }\r\n    recipes.forEach(recipe => {\r\n      content.push(\r\n        <ListItem\r\n          key={idGenerator(recipe.name)}\r\n          onClick={() => {\r\n            this.setState({ selected: recipe, showOneRecipe: true })\r\n          }}>\r\n          <ListItemText\r\n            key={idGenerator(recipe.name + \"text\")}>\r\n            {recipe.name}\r\n          </ListItemText>\r\n          <ListItemText\r\n            key={idGenerator(\"Matchingrate\")}>\r\n            {Math.round(recipe.matchingRate * 100)}%\r\n          </ListItemText>\r\n        </ListItem>\r\n      );\r\n\r\n    })\r\n    return content\r\n  }\r\n\r\n  createView = () => {\r\n    let content\r\n    if (this.props.location.shopping) {\r\n      content = [\r\n        <div className=\"Test1\">\r\n          <p>\r\n            Hier sind drei Vorschläge:\r\n            </p>\r\n          <p>\r\n            (einfach auf den Namen klicken)\r\n            </p>\r\n          {this.createContent(this.allRecipes, true)}\r\n        </div>\r\n      ]\r\n    } else {\r\n      content = [\r\n        <div className=\"Test2\">\r\n          <p>\r\n            Hier sind alle möglichen Cocktails mit Ihren Zutaten:\r\n  </p>\r\n          <p>\r\n            (einfach auf den Namen klicken)\r\n  </p>\r\n          {this.createContent(this.allRecipes, false)}\r\n        </div>\r\n      ]\r\n    }\r\n    return content\r\n  }\r\n  render() {\r\n    if (!this.props.location.selected) {\r\n      return (\r\n        <Redirect to=\"/ingredients\"></Redirect>\r\n      )\r\n    } else {\r\n      this.matchRating(this.props.location.selected)\r\n      console.log(\"location: \", this.props.location)\r\n      return (\r\n        <div className=\"CocktailPageContent\">\r\n          {\r\n            this.state.showOneRecipe ?\r\n              <Recipe recipe={this.state.selected} backButton={this.backButton.bind(this)} />\r\n              : this.createView()\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CocktailPage","import React from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport \"./Sidebar.css\"\r\nimport { idGenerator } from \"../idGenerator\"\r\n\r\nclass Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Menu\r\n                    key={idGenerator(\"Navbar-Menu\")}\r\n                    isOpen={this.state.isOpen}\r\n                    >\r\n                    <a className=\"menu-item\" href='/'>Home</a>\r\n                    <a className=\"menu-item\" href=\"/ingredients\">Zutaten</a>\r\n                    <a className=\"menu-item\" href='/receipts'>Rezept</a>\r\n                </Menu>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Sidebar","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Recipes from \"./containers/recipes\"\r\nimport { getAllRecipes } from './databasehandler';\r\nimport Ingridients from \"./components/Ingridients\"\r\nimport Startingpage from \"./containers/StartingPage\"\r\nimport CocktailPage from \"./components/cocktailPage\"\r\nimport \"./App.css\"\r\nimport Sidebar from './containers/SideBar';\r\n\r\nfunction App() {\r\n  let allItems = []\r\n  allItems = getAllRecipes()\r\n\r\n  return (\r\n    <div className=\"start\">\r\n      <BrowserRouter>\r\n        <Sidebar />\r\n        <Switch>\r\n          <Route path=\"/\" render={() => <Startingpage data={allItems} />} exact />\r\n          <Route path=\"/ingredients\" render={() => <Ingridients data={allItems} />} exact />\r\n          <Route path=\"/receipts\" render={() => <Recipes data={allItems} />} exact />\r\n          <Route path=\"/cocktail\" component={CocktailPage} exact />\r\n        </Switch>\r\n      </BrowserRouter>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Background.a73750b0.jpg\";"],"sourceRoot":""}